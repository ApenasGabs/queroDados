name: Scrape OLX and Zap and push results

on:
  push:
    branches:
      - main
  schedule:
    - cron: "40 4 * * *"
  workflow_dispatch:

jobs:
  olx-scraper:
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.upload-olx-artifact.outputs.artifact-path }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Install Xvfb
        run: sudo apt-get install -y xvfb

      - name: Create data artifact directory if not exists
        run: mkdir -p data/results

      - name: Run OLX scraper
        run: |
          Xvfb :99 -ac &
          export DISPLAY=:99
          node scrapers/index.js olx

      - name: Save OLX results as an artifact
        id: upload-olx-artifact
        uses: actions/upload-artifact@v4
        with:
          name: olx-results
          path: data/results/*.json

      - name: Save error screenshots as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: error-screenshots
          path: data/results/*.png

  zap-scraper:
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.upload-zap-artifact.outputs.artifact-path }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Install Xvfb
        run: sudo apt-get install -y xvfb

      - name: Create data artifact directory if not exists
        run: mkdir -p data/results

      - name: Run Zap scraper
        run: |
          Xvfb :99 -ac &
          export DISPLAY=:99
          node scrapers/index.js zap

      - name: Save Zap results as an artifact
        id: upload-zap-artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-results
          path: data/results/*.json

      - name: Save error screenshots as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: error-screenshots
          path: data/results/*.png

  update-repo:
    runs-on: ubuntu-latest
    needs: [olx-scraper, zap-scraper]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download OLX artifact
        uses: actions/download-artifact@v4
        with:
          name: olx-results
          path: data/results

      - name: Download Zap artifact
        uses: actions/download-artifact@v4
        with:
          name: zap-results
          path: data/results

      - name: Clone the target repository
        run: |
          git clone https://github.com/${{ secrets.TARGET_REPO_URL }}.git querocasa
        env:
          GITHUB_TOKEN: ${{ secrets.TARGET_REPO_PAT }}

      - name: Checkout to api branch and update
        run: |
          cd querocasa
          git fetch origin
          git checkout -b api origin/api

      - name: Create data directory if not exists
        run: mkdir -p querocasa/data

      - name: Copy results folder to target repository
        run: cp -r data/results querocasa/data

      - name: Configure Git user
        run: |
          cd querocasa
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"

      - name: Merge main into api with theirs strategy
        run: |
          cd querocasa
          git merge -X theirs origin/main || true

      - name: Set upstream branch for api
        run: |
          cd querocasa
          git branch --set-upstream-to=origin/api api

      - name: Commit and push changes
        run: |
          cd querocasa
          if [ -n "$(ls data/results/*.json 2>/dev/null)" ] || [ -n "$(ls data/results/*.png 2>/dev/null)" ]; then
            echo "Adicionando arquivos JSON e/ou prints ao git"
            git add data/results/*.json 2>/dev/null || true
            git add data/results/*.png 2>/dev/null || true
            git commit -m ":rocket: Update results folder with new data or error screenshots"
            echo "Fazendo push das mudan√ßas"
            git push https://${{ secrets.TARGET_REPO_PAT }}@github.com/${{ secrets.TARGET_REPO_URL }}.git HEAD:api
          else
            echo "Nenhum arquivo JSON ou print encontrado. Pulando commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.TARGET_REPO_PAT }}
